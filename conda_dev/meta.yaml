{% set name = "paramak" %}
{% set build = 0 %}

package:
  name: "{{ name|lower }}"
  version: {{ GIT_DESCRIBE_TAG }}
  version: 0.1.0

source:
  path: ../..

build:
  skip: true  # [win]
  number: {{ build }}
  script: python setup.py install --single-version-externally-managed --record=record.txt

  # add build string so packages can depend on
  # dagmc or nodagmc variants explicitly:
  # `paramak * _dagmc_*` for including dagmc export

  string: dagmc_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ build }}

requirements:
  build:
    - python {{ python }}
    - setuptools
  run:
    - python {{ python }}
    - mpmath
    - plasmaboundaries
    - plotly
    - brep_part_finder
    - brep_to_h5m 

test:
  imports:
    - paramak
    - paramak.parametric_components
    - paramak.parametric_reactors
    - paramak.parametric_shapes
    - tests
  requires:
    - pytest
    - dagmc_h5m_file_inspector
  source_files:
    - tests/
    - tests_h5m/
    - examples/
    # - tests_examples/  # TODO include if cadquery_jupyter gets a conda install
    # - tests_show/  # TODO include if cadquery_jupyter gets a conda install
  commands:
    - pytest -v tests
    - pytest -v tests_h5m  # [not win]
    # - pytest -v tests_examples  # TODO include if cadquery_jupyter gets a conda install
    # - pytest -v tests_show  # TODO include if cadquery_jupyter gets a conda install

about:
  home: "https://github.com/fusion-energy/paramak"
  license: MIT
  license_family: MIT
  license_file: LICENSE.txt
  summary: "Create 3D fusion reactor CAD models based on input parameters"
  doc_url: https://paramak.readthedocs.io/
  dev_url: https://github.com/fusion-energy/paramak
  summary: Paramak - parameter driven fusion reactor model creation

extra:
  recipe-maintainers:
    - shimwell
